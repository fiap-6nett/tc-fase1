// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using uBee.Persistence;

#nullable disable

namespace uBee.Persistence.Migrations
{
    [DbContext(typeof(uBeeContext))]
    partial class uBeeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("uBee.Domain.Entities.BeeContract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("beecontracts", (string)null);
                });

            modelBuilder.Entity("uBee.Domain.Entities.ContractedHive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BeeContractId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("HiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdBeeContract")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdHive")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BeeContractId");

                    b.HasIndex("HiveId");

                    b.HasIndex("IdBeeContract");

                    b.HasIndex("IdHive");

                    b.ToTable("contractedhives", (string)null);
                });

            modelBuilder.Entity("uBee.Domain.Entities.Hive", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("IdUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdUser");

                    b.ToTable("hives", (string)null);
                });

            modelBuilder.Entity("uBee.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("UserRole")
                        .HasColumnType("int");

                    b.Property<string>("_passwordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PasswordHash");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("64cc4184-b9d1-42ef-aef1-c8fcfefde98e"),
                            Email = "admin@ubee.com",
                            Location = 11,
                            Name = "Administrador",
                            Phone = "999999999",
                            Surname = "(built-in)",
                            UserRole = 1,
                            _passwordHash = "Admin@123"
                        },
                        new
                        {
                            Id = new Guid("3a6ea239-84c7-40f5-8c9e-59212fe805d5"),
                            Email = "cleber@ubee.com",
                            Location = 15,
                            Name = "Cleber",
                            Phone = "999999991",
                            Surname = "(built-in)",
                            UserRole = 3,
                            _passwordHash = "Cleber@123"
                        },
                        new
                        {
                            Id = new Guid("d228dd0f-aac8-4c19-8197-f19719f6277c"),
                            Email = "diego@ubee.com",
                            Location = 15,
                            Name = "Diego",
                            Phone = "999999992",
                            Surname = "(built-in)",
                            UserRole = 2,
                            _passwordHash = "Diego@123"
                        },
                        new
                        {
                            Id = new Guid("b6d8e964-df6e-43eb-b47a-b30e7889cd08"),
                            Email = "lucas@ubee.com",
                            Location = 11,
                            Name = "Lucas",
                            Phone = "999999993",
                            Surname = "(built-in)",
                            UserRole = 2,
                            _passwordHash = "Lucas@123"
                        },
                        new
                        {
                            Id = new Guid("4351821b-94c4-4d52-9d41-78ef037cc021"),
                            Email = "rafael@ubee.com",
                            Location = 11,
                            Name = "Rafael",
                            Phone = "999999994",
                            Surname = "(built-in)",
                            UserRole = 3,
                            _passwordHash = "Rafael@123"
                        },
                        new
                        {
                            Id = new Guid("b4f83806-2d4e-4759-be9c-5537462af0f9"),
                            Email = "wesley@ubee.com",
                            Location = 21,
                            Name = "Wesley",
                            Phone = "999999995",
                            Surname = "(built-in)",
                            UserRole = 2,
                            _passwordHash = "Wesley@123"
                        });
                });

            modelBuilder.Entity("uBee.Domain.Entities.BeeContract", b =>
                {
                    b.HasOne("uBee.Domain.Entities.User", "User")
                        .WithMany("BeeContracts")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("uBee.Domain.Entities.ContractedHive", b =>
                {
                    b.HasOne("uBee.Domain.Entities.BeeContract", null)
                        .WithMany("ContractedHives")
                        .HasForeignKey("BeeContractId");

                    b.HasOne("uBee.Domain.Entities.Hive", null)
                        .WithMany("ContractedHives")
                        .HasForeignKey("HiveId");

                    b.HasOne("uBee.Domain.Entities.BeeContract", "BeeContract")
                        .WithMany()
                        .HasForeignKey("IdBeeContract")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("uBee.Domain.Entities.Hive", "Hive")
                        .WithMany()
                        .HasForeignKey("IdHive")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BeeContract");

                    b.Navigation("Hive");
                });

            modelBuilder.Entity("uBee.Domain.Entities.Hive", b =>
                {
                    b.HasOne("uBee.Domain.Entities.User", "User")
                        .WithMany("Hives")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("uBee.Domain.Entities.BeeContract", b =>
                {
                    b.Navigation("ContractedHives");
                });

            modelBuilder.Entity("uBee.Domain.Entities.Hive", b =>
                {
                    b.Navigation("ContractedHives");
                });

            modelBuilder.Entity("uBee.Domain.Entities.User", b =>
                {
                    b.Navigation("BeeContracts");

                    b.Navigation("Hives");
                });
#pragma warning restore 612, 618
        }
    }
}
